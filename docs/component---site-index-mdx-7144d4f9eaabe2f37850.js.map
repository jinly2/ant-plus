{"version":3,"sources":["webpack:///../site/Index.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","alt","src","isMDXComponent"],"mappings":"4fAOO,IAAMA,EAAe,Q,gMAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,QADR,QAGA,8CAA6B,mBAAGC,WAAW,KAAQ,CAC/C,KAAQ,2CADiB,QAA7B,+BAGA,iBAAQ,CACN,GAAM,MADR,MAGA,qEAAoD,0BAAYA,WAAW,KAAvB,aAApD,MAAgH,0BAAYA,WAAW,KAAvB,0BAAhH,cACA,gEACA,iBAAQ,CACN,GAAM,MADR,MAGA,sCAAqB,0BAAYA,WAAW,KAAvB,QAArB,mBACA,qBAAG,mBAAKC,IAAI,sCAAiCC,IAAI,oFACjD,iBAAQ,CACN,GAAM,MADR,MAGA,sBACE,kBAAIF,WAAW,MAAK,sBAAQA,WAAW,MAAnB,QAApB,eAA6E,0BAAYA,WAAW,MAAvB,aAA7E,IAAwI,0BAAYA,WAAW,MAAvB,SAAxI,KACA,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAnB,QAApB,OAAqE,0BAAYA,WAAW,MAAvB,SAArE,+BACA,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAnB,UAApB,yCACA,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAnB,QAApB,qCAEF,iBAAQ,CACN,GAAM,MADR,MAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,oBAIL,0BACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,uBAIL,iBAAQ,CACN,GAAM,MADR,MAGA,qBAAG,mBAAGA,WAAW,KAAQ,CACrB,KAAQ,yDACP,mBAAKC,IAAI,YAAYC,IAAI,6DAC9B,iBAAQ,CACN,GAAM,MADR,MAGA,uBAAK,sBAAMF,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,UACd,SAAW,IAHV,2RAeL,sCAAqB,0BAAYA,WAAW,KAAvB,MAArB,aAAiF,0BAAYA,WAAW,KAAvB,SAAjF,MAAyI,0BAAYA,WAAW,KAAvB,aAAzI,MAAqM,0BAAYA,WAAW,KAAvB,SAArM,IAA2P,mBAAGA,WAAW,KAAQ,CAC7Q,KAAQ,6FACP,0BAAYA,WAAW,KAAvB,mCAFL,IAEwF,0BAAYA,WAAW,KAAvB,WAFxF,4BAEwK,0BAAYA,WAAW,KAAvB,SAFxK,IAE8N,0BAAYA,WAAW,KAAvB,gBAF9N,OAGA,oCAAmB,0BAAYA,WAAW,KAAvB,SAAnB,yCACA,kDAAiC,mBAAGA,WAAW,KAAQ,CACnD,KAAQ,qDADqB,wBAAjC,KAGA,iBAAQ,CACN,GAAM,UADR,UAGA,qBAAG,mBAAGA,WAAW,KAAQ,CACrB,KAAQ,2CADT,2CAGH,iBAAQ,CACN,GAAM,MADR,MAGA,qBAAG,mBAAGA,WAAW,KAAQ,CACrB,KAAQ,+DADT,eAAH,QAEiC,mBAAGA,WAAW,KAAQ,CACnD,KAAQ,sBADqB,qB,8LAOrCJ,EAAWO,gBAAiB","file":"component---site-index-mdx-7144d4f9eaabe2f37850.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/Lee/Works/ant-plus/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport './styles.scss';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"快速开始\"\n    }}>{`快速开始`}</h1>\n    <p>{`Ant Plus 是 Ant Design `}<a parentName=\"p\" {...{\n        \"href\": \"https://ant.design/components/form-cn/\"\n      }}>{`Form`}</a>{` 的简化版。此刻起，以你最熟悉的方式来搭建 Form。`}</p>\n    <h2 {...{\n      \"id\": \"介绍\"\n    }}>{`介绍`}</h2>\n    <p>{`Ant Plus 最主要的特点，便是可以在表单控件的 Props 中，直接传入以前需使用 `}<inlineCode parentName=\"p\">{`Form.Item`}</inlineCode>{` 与 `}<inlineCode parentName=\"p\">{`form.getFieldDecorator`}</inlineCode>{` 包裹来传入的信息。`}</p>\n    <p>{`从而简化使用，杜绝冗余的样板代码，构建起简洁清晰、利于维护的 Form 代码。`}</p>\n    <h2 {...{\n      \"id\": \"对比\"\n    }}>{`对比`}</h2>\n    <p>{`使用 Ant Plus 与 `}<inlineCode parentName=\"p\">{`antd`}</inlineCode>{` 搭建 Form 的代码对比。`}</p>\n    <p><img alt=\"\\u4EE3\\u7801\\u5BF9\\u6BD4\\u56FE\" src=\"https://raw.githubusercontent.com/nanxiaobei/ant-plus/master/contrast/demo.png\" /></p>\n    <h2 {...{\n      \"id\": \"特性\"\n    }}>{`特性`}</h2>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`极其简便`}</strong>{`：符合直觉，告别繁琐的 `}<inlineCode parentName=\"li\">{`Form.Item`}</inlineCode>{` `}<inlineCode parentName=\"li\">{`rules`}</inlineCode>{`。`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`统一提示`}</strong>{`：简化 `}<inlineCode parentName=\"li\">{`rules`}</inlineCode>{` 代码，可全局定义校验提示，告别烦乱的自定义与不可控。`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`简化 API`}</strong>{`：对 Form 相关组件的常用 API 进行了简化，一切只为更流畅的开发。`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`渐进增强`}</strong>{`：兼容组件全部原有使用方式，在基础之上，进行了功能的拓展与简化。`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"安装\"\n    }}>{`安装`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`yarn add antx\n`}</code></pre>\n    <p>{`或`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`npm install antx\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"示例\"\n    }}>{`示例`}</h2>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://codesandbox.io/s/antx-mqxxzrj87j?fontsize=14\"\n      }}><img alt=\"Edit antx\" src=\"https://codesandbox.io/static/img/play-codesandbox.svg\" /></a></p>\n    <h2 {...{\n      \"id\": \"使用\"\n    }}>{`使用`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"harmony\",\n        \"harmony\": true\n      }}>{`import { Input, Button } from 'antx';\n\nconst Demo = () => (\n  <Form data={{ name: 'Emily' }}>\n    <Input label=\"用户名\" name=\"name\" rules={['required', 'max=10']} max={10} tip=\"full\" />\n    <Button htmlType=\"submit\">提交</Button>\n  </Form>\n);\n\nexport default Demo;\n`}</code></pre>\n    <p>{`表单控件的 Props 中，`}<inlineCode parentName=\"p\">{`id`}</inlineCode>{` 为表单域唯一标识，`}<inlineCode parentName=\"p\">{`label`}</inlineCode>{` 为 `}<inlineCode parentName=\"p\">{`Form.Item`}</inlineCode>{` 的 `}<inlineCode parentName=\"p\">{`label`}</inlineCode>{`。`}<a parentName=\"p\" {...{\n        \"href\": \"https://ant.design/components/form-cn/#getFieldDecorator(id,-options)-%E5%8F%82%E6%95%B0\"\n      }}><inlineCode parentName=\"a\">{`getFieldDecorator(id, options)`}</inlineCode></a>{` `}<inlineCode parentName=\"p\">{`options`}</inlineCode>{` 参数中的项，均可直接用于组件的 Props，如 `}<inlineCode parentName=\"p\">{`rules`}</inlineCode>{`、`}<inlineCode parentName=\"p\">{`initialValue`}</inlineCode>{` 等。`}</p>\n    <p>{`Ant Plus 还对 `}<inlineCode parentName=\"p\">{`rules`}</inlineCode>{` 做了简化，可使用简洁的字符串来设置校验规则，同时提供了体验更好的 UI。`}</p>\n    <p>{`是的，一切就是如此的简洁清晰。完整使用介绍，请查阅 `}<a parentName=\"p\" {...{\n        \"href\": \"https://nanxiaobei.github.io/ant-plus/#/form#api\"\n      }}>{`Ant Plus Form 组件 API`}</a>{`。`}</p>\n    <h2 {...{\n      \"id\": \"github\"\n    }}>{`GitHub`}</h2>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://github.com/nanxiaobei/ant-plus\"\n      }}>{`https://github.com/nanxiaobei/ant-plus`}</a></p>\n    <h2 {...{\n      \"id\": \"协议\"\n    }}>{`协议`}</h2>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://github.com/nanxiaobei/ant-plus/blob/master/LICENSE\"\n      }}>{`MIT License`}</a>{` (c) `}<a parentName=\"p\" {...{\n        \"href\": \"https://mrlee.me/\"\n      }}>{`nanxiaobei`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}