{"version":3,"sources":["webpack:///../src/Transfer.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","useState","Playground","Props","Transfer","targetKeys","onChange","data","key","title","newTargetKeys","search","unit","searchTip","of","isToggle","isMDXComponent"],"mappings":"6gBASO,IAAMA,EAAe,Q,kMAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,gBADR,gBAGA,iBAAQ,CACN,GAAM,MADR,MAGA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,gBADZ,uCAIL,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,+bAA8cC,SAAO,GACtfL,QACAH,kBACAS,oBACAC,eACAC,UACAC,cANsf,gBAOtfZ,IAPsf,EAQtfH,eARsf,GASrfO,QAAQ,eACZ,WAAM,MAC8BK,mBAAS,CAAC,UAAlCI,EADN,KACkBC,EADlB,KAED,OAAO,YAAC,IAAD,CAAUC,KAAM,CAAC,CACtBC,IAAK,QACLC,MAAO,UACN,CACDD,IAAK,MACLC,MAAO,UACN,CACDD,IAAK,MACLC,MAAO,WACLJ,WAAYA,EAAYC,SAAU,SAAAI,GACpCJ,EAASI,IACRD,MAAM,KAAKE,QAAM,EAACC,KAAK,IAAIC,UAAU,MAAMjB,QAAQ,gBAG1D,iBAAQ,CACN,GAAM,OADR,OAGA,YAAC,IAAD,CAAOkB,GAAIV,IAAUW,UAAQ,EAACnB,QAAQ,UACtC,mCAAkB,mBAAGC,WAAW,KAAQ,CACpC,KAAQ,+CADM,uBAAlB,c,gMAOJJ,EAAWuB,gBAAiB","file":"component---src-transfer-mdx-0630a88853ef1dd27e2d.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/Lee/Works/ant-plus/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { useState } from 'react';\nimport { Playground, Props } from 'docz';\nimport { Transfer } from 'antx';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"transfer-穿梭框\"\n    }}>{`Transfer 穿梭框`}</h1>\n    <h2 {...{\n      \"id\": \"演示\"\n    }}>{`演示`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { Transfer } from 'antx';\n`}</code></pre>\n    <Playground __position={0} __code={'() => {\\n  const [targetKeys, onChange] = useState([\\'tiger\\'])\\n  return (\\n    <Transfer\\n      data={[\\n        { key: \\'tiger\\', title: \\'小脑斧 🐅\\' },\\n        { key: \\'dog\\', title: \\'小狗子 🐕\\' },\\n        { key: \\'cat\\', title: \\'小喵咪 🐈\\' },\\n      ]}\\n      targetKeys={targetKeys}\\n      onChange={newTargetKeys => {\\n        onChange(newTargetKeys)\\n      }}\\n      title=\\\"宠物\\\"\\n      search\\n      unit=\\\"只\\\"\\n      searchTip=\\\"找一找\\\"\\n    />\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      Playground,\n      Props,\n      Transfer,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [targetKeys, onChange] = useState(['tiger']);\n        return <Transfer data={[{\n          key: 'tiger',\n          title: '小脑斧 🐅'\n        }, {\n          key: 'dog',\n          title: '小狗子 🐕'\n        }, {\n          key: 'cat',\n          title: '小喵咪 🐈'\n        }]} targetKeys={targetKeys} onChange={newTargetKeys => {\n          onChange(newTargetKeys);\n        }} title=\"宠物\" search unit=\"只\" searchTip=\"找一找\" mdxType=\"Transfer\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <Props of={Transfer} isToggle mdxType=\"Props\" />\n    <p>{`其它 Props 与 `}<a parentName=\"p\" {...{\n        \"href\": \"https://ant.design/components/transfer-cn/\"\n      }}>{`Ant Design Transfer`}</a>{` 一致。`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}