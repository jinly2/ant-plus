{"version":3,"sources":["webpack:///../site/Cascader.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","useState","Playground","Props","Cascader","value","onChange","data","val","text","children","keys","tip","search","clear","of","isToggle","isMDXComponent"],"mappings":"4gBASO,IAAMA,EAAe,Q,mMAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,iBADR,iBAGA,iBAAQ,CACN,GAAM,MADR,MAGA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,gBADZ,uCAIL,iBAAQ,CACN,GAAM,MADR,MAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,gjBAA2kBC,SAAO,GACnnBL,QACAH,kBACAS,oBACAC,eACAC,UACAC,cANmnB,gBAOnnBZ,IAPmnB,EAQnnBH,eARmnB,GASlnBO,QAAQ,eACZ,WAAM,MACyBK,mBAAS,CAAC,QAA7BI,EADN,KACaC,EADb,KAED,OAAO,YAAC,IAAD,CAAUC,KAAM,CAAC,CACtBC,IAAK,QACLC,KAAM,SACNC,SAAU,CAAC,CACTF,IAAK,YACLC,KAAM,aAEP,CACDD,IAAK,MACLC,KAAM,SACNC,SAAU,CAAC,CACTF,IAAK,UACLC,KAAM,aAEP,CACDD,IAAK,MACLC,KAAM,WACJE,KAAM,CAAC,MAAO,QAASN,MAAOA,EAAOC,SAAUA,EAAUM,IAAI,MAAMC,QAAM,EAACC,OAAK,EAAClB,QAAQ,gBAGhG,iBAAQ,CACN,GAAM,OADR,OAGA,8CAA6B,mBAAGC,WAAW,KAAQ,CAC/C,KAAQ,+CADiB,YAA7B,QAGA,YAAC,IAAD,CAAOkB,GAAIX,IAAUY,UAAQ,EAACpB,QAAQ,gB,iMAK1CH,EAAWwB,gBAAiB","file":"component---site-cascader-mdx-e7ae020a32d030ed6b97.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/Lee/Works/ant-plus/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { useState } from 'react';\nimport { Playground, Props } from 'docz';\nimport { Cascader } from 'antx';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"cascader-级联选择\"\n    }}>{`Cascader 级联选择`}</h1>\n    <h2 {...{\n      \"id\": \"使用\"\n    }}>{`使用`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { Cascader } from 'antx';\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"示例\"\n    }}>{`示例`}</h2>\n    <Playground __position={0} __code={'() => {\\n  const [value, onChange] = useState([\\'cat\\'])\\n  return (\\n    <Cascader\\n      data={[\\n        {\\n          val: \\'tiger\\',\\n          text: \\'小脑斧 🐅\\',\\n          children: [{ val: \\'lil_tiger\\', text: \\'小小脑斧 🐯\\' }],\\n        },\\n        {\\n          val: \\'dog\\',\\n          text: \\'小狗子 🐕\\',\\n          children: [{ val: \\'lil_dog\\', text: \\'小小狗子 🐶\\' }],\\n        },\\n        { val: \\'cat\\', text: \\'小喵咪 🐈\\' },\\n      ]}\\n      keys={[\\'val\\', \\'text\\']}\\n      value={value}\\n      onChange={onChange}\\n      tip=\\\"找一找\\\"\\n      search\\n      clear\\n    />\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      Playground,\n      Props,\n      Cascader,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [value, onChange] = useState(['cat']);\n        return <Cascader data={[{\n          val: 'tiger',\n          text: '小脑斧 🐅',\n          children: [{\n            val: 'lil_tiger',\n            text: '小小脑斧 🐯'\n          }]\n        }, {\n          val: 'dog',\n          text: '小狗子 🐕',\n          children: [{\n            val: 'lil_dog',\n            text: '小小狗子 🐶'\n          }]\n        }, {\n          val: 'cat',\n          text: '小喵咪 🐈'\n        }]} keys={['val', 'text']} value={value} onChange={onChange} tip=\"找一找\" search clear mdxType=\"Cascader\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <p>{`其它 Props 与 Ant Design `}<a parentName=\"p\" {...{\n        \"href\": \"https://ant.design/components/cascader-cn/\"\n      }}>{`Cascader`}</a>{` 一致。`}</p>\n    <Props of={Cascader} isToggle mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}